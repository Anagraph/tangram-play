{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/main.js","main.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","query","parseQuery","window","location","search","slice","flags","parseFeatureFlags","document","querySelector","classList","add","isMobile","getElementById","style","display","addEventListener","reflowUI","map","initMap","editor","initEditor","initUI","loadWidgets","loadKeys","setTimeout","unfoldAll","foldByLevel","parseInt","selectLines","createWidgets"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,GCAA,YAGA,IAAIK,GAAQC,WAAWC,OAAOC,SAASC,OAAOC,MAAM,IAEhDC,EAAQC,kBAAkBP,EAE1BM,GAAgB,YAAM,GACtBE,SAASC,cAAc,QAAQC,UAAUC,IAAI,aAG7CC,aACAJ,SAASK,eAAe,kBAAkBC,MAAMC,QAAU,QAC1DP,SAASK,eAAe,0BAA0BG,iBAAiB,QAAS,SAAUnC,GAClF2B,SAASK,eAAe,kBAAkBC,MAAMC,QAAU,OAC1DE,aAKR,IAAIH,GAAQd,EAAa,MAAIA,EAAa,MAAI,yBAG1CkB,EAAMC,QAAQL,GAGdM,EAASC,WAAWb,SAASK,eAAe,UAAWC,EAG3DQ,QAAOF,EAAQF,GAGfK,YAAYH,EAAQ,qBACpBI,SAASJ,EAAQ,kBAGjBK,WAAW,WACHzB,EAAiB,YACjB0B,UAAUN,GACVO,YAAYP,EAAQQ,SAAS5B,EAAiB,aAE9CA,EAAa,OACb6B,YAAYT,EAAQpB,EAAa,OAGrC8B,cAAcV,IAEf,eCGQ","file":"main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n// Get query string and parse it\nvar query = parseQuery(window.location.search.slice(1));\n\nvar flags = parseFeatureFlags(query);\n\nif (flags['fullmenu'] === true) {\n    document.querySelector('html').classList.add('full-menu');\n}\n\nif (isMobile()) {\n    document.getElementById('mobile-message').style.display = 'block';\n    document.getElementById('dismiss-mobile-message').addEventListener('click', function (e) {\n        document.getElementById('mobile-message').style.display = 'none';\n        reflowUI();\n    });\n}\n\n// Initial style when it loads\nvar style = query['style'] ? query['style'] : 'data/styles/basic.yaml';\n\n// Tangram Map\nvar map = initMap(style);\n\n// Editor\nvar editor = initEditor(document.getElementById('editor'), style);\n\n// UI\ninitUI(editor, map);\n\n// Editor Widgets\nloadWidgets(editor, 'data/widgets.json');\nloadKeys(editor, 'data/keys.json');\n\n// Once everything is loaded\nsetTimeout(function () {\n    if (query['foldLevel']) {\n        unfoldAll(editor);\n        foldByLevel(editor, parseInt(query['foldLevel']));\n    }\n    if (query['lines']) {\n        selectLines(editor, query['lines']);\n    }\n\n    createWidgets(editor);\n    //updateWidgets(editor);\n}, 500);\n",null],"sourceRoot":"/source/"}