{
  "root": true,
  "parserOptions": {
    "ecmaVersion": 6,
    "ecmaFeatures": {
      "jsx": true,
      "experimentalObjectRestSpread": true
    },
    "sourceType": "module"
  },
  "env": {
    "browser": true,
    "node": true,
    "es6": true
  },
  "plugins": ["react"],
  "extends": ["airbnb"],
  "rules": {
    // Copy most recent airbnb-style for max-len rule. eslint we bumped to
    // to take advantage of the `ignoreRegExpLiterals` rule, but airbnb style
    // itself was not bumped because of many new rules that break existing code.
    // Line length is currently a warning to not break old code
    "max-len": ["warn", 100, 2, {
      ignoreUrls: true,
      ignoreComments: false,
      ignoreRegExpLiterals: true,
      ignoreStrings: true,
      ignoreTemplateLiterals: true,
    }],

    // Allow arguments in functions to be unused
    // This allows us to specify that a function will be called with arguments
    // even though we do not need it, e.g. in Promise (resolve, reject),
    // onEvent(event), catch(error), etc.
    "no-unused-vars": ["error", { vars: "local", args: "none" }],

    // Warnings for things that are not easily fixable now
    "react/jsx-filename-extension": "warn",
    "react/prefer-stateless-function": "warn",
    "import/prefer-default-export": "warn",

    // This is disallowed for good reasons, but unfortunately too much of our
    // code relies explicitly on this behavior to set properties on an object
    // referred to by an outer function (most notably CodeMirror state)
    "no-param-reassign": "warn",
  }
}
